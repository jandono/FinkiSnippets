@model App.ViewModels.EditEventViewModel

@{
    ViewBag.Title = "EditEvent";
    string tempDate = String.Format("{0}.{1}.{2}", Model.Event.Start.Day, Model.Event.Start.Month, Model.Event.Start.Year);
    Model.AllSnippets = Model.AllSnippets.Where(x => !Model.Event.Snippets.Select(y => y.ID).Contains(x.ID)).ToList();
    var addedSnippets = Model.Event.Snippets.Select(x => x.ID).ToList();
}

<h2>
    Нов натпревар
</h2>
<hr />

@using(Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <fieldset>
        <div class="grid">
            <div class="row">
                <div class="span8">
                    <label>Име на натпреварот</label>
                    <div class="input-control text">
                        <input type="text" value="@Model.Event.Name"id="name" />
                    </div>
                </div>

                <div class="span4">

                    <label>Датум на натпреварот</label>
                    <div class="input-control text" data-role="datepicker" data-weekstart="1">
                        <input type="text" name="date" value="@tempDate" id="datepicker">
                        <button class="btn-date"></button>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="span8">
                    <label>Опис на натпреварот</label>
                    <div class="advanced-wrapper" style="border: 1px #d9d9d9 solid; min-height: 200px; max-height: 400px;">
                        <div class="toolbar-container">
                            <span class="ql-format-group">
                                <select title="Font" class="ql-font">
                                    <option value="sans-serif" selected>Sans Serif</option>
                                    <option value="Georgia, serif">Serif</option>
                                    <option value="Monaco, 'Courier New', monospace">Monospace</option>
                                </select>
                                <select title="Size" class="ql-size">
                                    <option value="10px">Small</option>
                                    <option value="13px" selected>Normal</option>
                                    <option value="18px">Large</option>
                                    <option value="32px">Huge</option>
                                </select>
                            </span><span class="ql-format-group"><span title="Bold" class="ql-format-button ql-bold"></span><span class="ql-format-separator"></span><span title="Italic" class="ql-format-button ql-italic"></span><span class="ql-format-separator"></span><span title="Underline" class="ql-format-button ql-underline"></span></span><span class="ql-format-group">
                                <select title="Text Color" class="ql-color">
                                    <option value="rgb(0, 0, 0)" selected></option>
                                    <option value="rgb(230, 0, 0)"></option>
                                    <option value="rgb(255, 153, 0)"></option>
                                    <option value="rgb(255, 255, 0)"></option>
                                    <option value="rgb(0, 138, 0)"></option>
                                    <option value="rgb(0, 102, 204)"></option>
                                    <option value="rgb(153, 51, 255)"></option>
                                    <option value="rgb(255, 255, 255)"></option>
                                    <option value="rgb(250, 204, 204)"></option>
                                    <option value="rgb(255, 235, 204)"></option>
                                    <option value="rgb(255, 255, 204)"></option>
                                    <option value="rgb(204, 232, 204)"></option>
                                    <option value="rgb(204, 224, 245)"></option>
                                    <option value="rgb(235, 214, 255)"></option>
                                    <option value="rgb(187, 187, 187)"></option>
                                    <option value="rgb(240, 102, 102)"></option>
                                    <option value="rgb(255, 194, 102)"></option>
                                    <option value="rgb(255, 255, 102)"></option>
                                    <option value="rgb(102, 185, 102)"></option>
                                    <option value="rgb(102, 163, 224)"></option>
                                    <option value="rgb(194, 133, 255)"></option>
                                    <option value="rgb(136, 136, 136)"></option>
                                    <option value="rgb(161, 0, 0)"></option>
                                    <option value="rgb(178, 107, 0)"></option>
                                    <option value="rgb(178, 178, 0)"></option>
                                    <option value="rgb(0, 97, 0)"></option>
                                    <option value="rgb(0, 71, 178)"></option>
                                    <option value="rgb(107, 36, 178)"></option>
                                    <option value="rgb(68, 68, 68)"></option>
                                    <option value="rgb(92, 0, 0)"></option>
                                    <option value="rgb(102, 61, 0)"></option>
                                    <option value="rgb(102, 102, 0)"></option>
                                    <option value="rgb(0, 55, 0)"></option>
                                    <option value="rgb(0, 41, 102)"></option>
                                    <option value="rgb(61, 20, 102)"></option>
                                </select><span class="ql-format-separator"></span>
                                <select title="Background Color" class="ql-background">
                                    <option value="rgb(0, 0, 0)"></option>
                                    <option value="rgb(230, 0, 0)"></option>
                                    <option value="rgb(255, 153, 0)"></option>
                                    <option value="rgb(255, 255, 0)"></option>
                                    <option value="rgb(0, 138, 0)"></option>
                                    <option value="rgb(0, 102, 204)"></option>
                                    <option value="rgb(153, 51, 255)"></option>
                                    <option value="rgb(255, 255, 255)" selected></option>
                                    <option value="rgb(250, 204, 204)"></option>
                                    <option value="rgb(255, 235, 204)"></option>
                                    <option value="rgb(255, 255, 204)"></option>
                                    <option value="rgb(204, 232, 204)"></option>
                                    <option value="rgb(204, 224, 245)"></option>
                                    <option value="rgb(235, 214, 255)"></option>
                                    <option value="rgb(187, 187, 187)"></option>
                                    <option value="rgb(240, 102, 102)"></option>
                                    <option value="rgb(255, 194, 102)"></option>
                                    <option value="rgb(255, 255, 102)"></option>
                                    <option value="rgb(102, 185, 102)"></option>
                                    <option value="rgb(102, 163, 224)"></option>
                                    <option value="rgb(194, 133, 255)"></option>
                                    <option value="rgb(136, 136, 136)"></option>
                                    <option value="rgb(161, 0, 0)"></option>
                                    <option value="rgb(178, 107, 0)"></option>
                                    <option value="rgb(178, 178, 0)"></option>
                                    <option value="rgb(0, 97, 0)"></option>
                                    <option value="rgb(0, 71, 178)"></option>
                                    <option value="rgb(107, 36, 178)"></option>
                                    <option value="rgb(68, 68, 68)"></option>
                                    <option value="rgb(92, 0, 0)"></option>
                                    <option value="rgb(102, 61, 0)"></option>
                                    <option value="rgb(102, 102, 0)"></option>
                                    <option value="rgb(0, 55, 0)"></option>
                                    <option value="rgb(0, 41, 102)"></option>
                                    <option value="rgb(61, 20, 102)"></option>
                                </select><span class="ql-format-separator"></span>
                                <select title="Text Alignment" class="ql-align">
                                    <option value="left" selected></option>
                                    <option value="center"></option>
                                    <option value="right"></option>
                                    <option value="justify"></option>
                                </select>
                            </span><span class="ql-format-group"><span title="Link" class="ql-format-button ql-link"></span><span class="ql-format-separator"></span><span title="Image" class="ql-format-button ql-image"></span><span class="ql-format-separator"></span><span title="List" class="ql-format-button ql-list"></span></span>
                        </div>
                        <div class="editor-container" style="max-height: 350px;">
                            @Html.Raw(Model.Event.Description)
                        </div>
                    </div>
                </div>
                <div class="span4">
                    <div class="row">
                        <div class="span2">
                            <label>Почеток</label>
                            <div class="input-control text size1">
                                <input type="text" name="hourStart" value ="@Model.Event.Start.Hour" id="hourStart" />
                            </div>
                            <span>:</span>
                            <div class="input-control text size1">
                                <input type="text" name="minStart" value="@Model.Event.Start.Minute" id="minStart" />
                            </div>
                        </div>
                        <div class="span2">
                            <label>Крај</label>
                            <div class="input-control text size1">
                                <input type="text" name="hourEnd" value="@Model.Event.End.Hour" id="hourEnd" />
                            </div>
                            <span>:</span>
                            <div class="input-control text size1">
                                <input type="text" name="minEnd" value="@Model.Event.End.Minute" id="minEnd" />
                            </div>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label>&nbsp;</label>
                        <input type="submit" value="Измени Натпревар" class="btn success" style="height:34px;" />
                    </div>
                </div>
            </div>

            <hr />

            <div class="row">
                <div class="span6" style="text-align:center">Сите снипети</div>
                <div class="span6" style="text-align:center">Снипети во евент</div>
            </div>

            <div class="row">
                @{Html.RenderPartial("_ListSnippets", new App.ViewModels.ListSnippetsPartialViewModel { Snippets = Model.AllSnippets, DivName = "snippets", SpanSizeSnippets = "span6", SpanSizeArea = "span6" });}

                @{Html.RenderPartial("_ListSnippets", new App.ViewModels.ListSnippetsPartialViewModel { Snippets = Model.Event.Snippets.ToList(), DivName = "addedSnippets", StartCounter = Model.AllSnippets.Count, SpanSizeSnippets = "span6", SpanSizeArea = "span6" });}
            </div>
        </div>
    </fieldset>
}

@section Styles{
    <link href="~/Scripts/Quill/quill.snow.css" rel="stylesheet" />
}

@section Scripts{
    <script src="~/Scripts/metro-calendar.js"></script>
    <script src="~/Scripts/Quill/quill.js"></script>
    <script src="~/Scripts/metro-datepicker.js"></script>
    <script src="~/Scripts/src-noconflict/ace.js"></script>
    <script src="~/Scripts/Our Scripts/EditorInitializer.js"></script>
    <script src="~/Scripts/Our Scripts/QuillInitializer.js"></script>
    <script>
        $(function () {

            var addedSnippets = @Html.Raw(Json.Encode(addedSnippets));

            console.log(addedSnippets);

            $(".snippets").on("click", ".list", function () {

                var id = $(this).attr("id");

                var t = addedSnippets.filter(function (el) {
                    return el == id;
                });

                if (t.length > 0)
                    return;

                addedSnippets.push(id);
                console.log(addedSnippets);

                $(".addedSnippets").append('<div class="row eventSnippet">' + $(this).parent().parent().html() + '</div>');
                $(this).parent().parent().remove();
            });

            $(".addedSnippets").on("click", ".list", function () {

                var id = $(this).attr("id");

                console.log(id);

                addedSnippets = addedSnippets.filter(function (el) {
                    return el != id;
                });

                console.log(addedSnippets);

                $(".snippets").append('<div class="row eventSnippet">' + $(this).parent().parent().html() + '</div>');
                $(this).parent().parent().remove();
            });

            $("#hourStart,#hourEnd").focusin(function () {
                $(this).attr("data-state", "");
            });

            $("#hourStart, #hourEnd").focusout(function () {
                var h = $(this).val();
                if (h < 0 || h > 23 || h == "") {
                    $(this).attr("data-state", "error");
                }
            });

            $("#minStart, #minEnd").focusin(function () {
                $(this).attr("data-state", "");
            });

            $("#minStart,#minEnd").focusout(function () {
                var h = $(this).val();
                if (h < 0 || h > 59 || h == "") {
                    $(this).attr("data-state", "error");
                }
            });

            $("#datepicker").focusin(function () {
                $(this).attr("data-state", "");
            })

            $("form").submit(function (event) {
                event.preventDefault();

                var dateTemp = $("#datepicker").val();
                var hs = $("#hourStart");
                var ms = $("#minStart");
                var he = $("#hourEnd");
                var me = $("#minEnd");
                var group = $("#groupSelect").val();
                var name = $("#name").val();
                var description = advancedEditor.getHTML();

                var error = false;


                if (hs.val() < 0 || hs.val() > 23 || hs.val() == "") {
                    hs.attr("data-state", "error");
                    error = true;
                }

                if (ms.val() < 0 || ms.val() > 59 || ms.val() == "") {
                    ms.attr("data-state", "error");
                    error = true;
                }
                if (he.val() < 0 || he.val() > 23 || he.val() == "") {
                    he.attr("data-state", "error");
                    error = true;
                }

                if (me.val() < 0 || me.val() > 59 || me.val() == "") {
                    me.attr("data-state", "error");
                    error = true;
                }

                if ($("#datepicker").val() == "") {
                    error = true;
                    $("#datepicker").attr("data-state", "error");
                }

                if (error) {
                    return;
                }

                $.ajax({
                    url: '@Url.Action("EditEvent","Admin")',
                    type: "POST",
                    contentType: 'application/json',
                    data: JSON.stringify({
                        id: '@Model.Event.ID',
                        name: name,
                        description: description,
                        date: dateTemp,
                        hourStart: hs.val(),
                        minStart: ms.val(),
                        hourEnd: he.val(),
                        minEnd: me.val(),
                        Snippets: addedSnippets
                    })
                }).done(function (data) {

                    var color;

                    if(data == "error")
                        color = "#9a1616";
                    else
                        color = "#60a917";

                    var not = $.Notify({
                        caption: "Статус",
                        content: data,
                        timeout: 3000,
                        style: { background: color, color: "#fff" }
                    });

                    if(data != "error"){
                        setTimeout(function(){
                            window.location.replace('@Url.Action("Events", "Admin")');
                        },
                        3000);
                    }
                });

            });
        });
    </script>

}